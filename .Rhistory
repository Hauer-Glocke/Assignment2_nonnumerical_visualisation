temp <- read.table(gzfile("http://snap.stanford.edu/data/p2p-Gnutella08.txt.gz"), header=T)
temp <- read.table(gzfile(url("http://snap.stanford.edu/data/p2p-Gnutella08.txt.gz")), header=T)
temp <- gzfile(url("http://snap.stanford.edu/data/p2p-Gnutella08.txt.gz"))
url <- "http://snap.stanford.edu/data/p2p-Gnutella08.txt.gz"
tmp <- tempfile()
##
download.file(url,tmp)
##
data <- read.csv(
gzfile(tmp),
sep="\t",
header=TRUE,
stringsAsFactors=FALSE)
##
data <- read.csv(
gzfile(tmp))#,
View(data)
##
data <- read.csv(
gzfile(tmp),
sep="\t")
##
data <- read.csv(
gzfile(tmp),
sep="\t",
header=FALSE)
View(data)
View(data)
View(data)
data <- data[!(1:4),]
names(data) <- c("nodes", "edges")
View(data)
##
data <- read.csv(
gzfile(tmp),
sep="\t",
header=FALSE)
data <- data[-(1:4),]
names(data) <- c("nodes", "edges")
View(data)
tmp <- tempfile()
download.file("http://snap.stanford.edu/data/p2p-Gnutella08.txt.gz",tmp)
data <- read.csv(
gzfile(tmp),
sep="\t",
header=FALSE)
data <- data[-(1:4),]
names(data) <- c("nodes", "edges")
rm(tmp)
rm(url)
install.packages("GGally")
devtools::install_github("briatte/ggnet")
install.packages("ggnet")
library(GGally)
library(network)
library(sna)
library(ggplot2)
install.packages("network")
install.packages("network")
install.packages("sna")
library(GGally)
library(network)
library(sna)
library(ggplot2)
install.packages(c("car", "gap", "hms", "Matrix", "openssl", "Rcpp", "RcppEigen", "recipes", "rmarkdown", "stringi", "timeDate"))
net = rgraph(10, mode = "graph", tprob = 0.5)
net = network(net, directed = FALSE)
??rgraph
library(GGally)
library(network)
library(sna)
library(ggplot2)
net = rgraph(10, mode = "graph", tprob = 0.5)
net = network(net, directed = FALSE)
ggplot2(net)
ggplot(net)
network.vertex.names(net) = letters[1:10]
ggnet2(net)
?rgraph
network(data)
test network(data)
test <- network(data)
ggnet2()
ggnet2(test)
ggnet2(test, node.size = 4)
ggnet2(test, node.size = 0.1)
install.packages("igraph")
library(igraph)
net_ex <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
net_ex
df <- read_csv(unz("http://www.kateto.net/wordpress/wp-content/uploads/2017/06/polnet2017.zip",
"Dataset1-Media-Example-EDGES.csv"),
header=T,
as.is=T)
######################
require(readr)
df <- read_csv(unz("http://www.kateto.net/wordpress/wp-content/uploads/2017/06/polnet2017.zip",
"Dataset1-Media-Example-EDGES.csv"),
header=T,
as.is=T)
df <- read_csv(unz("http://www.kateto.net/wordpress/wp-content/uploads/2017/06/polnet2017.zip",
"Dataset1-Media-Example-EDGES.csv"))
df <- read_csv(unz("http://www.kateto.net/wordpress/wp-content/uploads/2017/06/polnet2017.zip",
"Data files/Dataset1-Media-Example-EDGES.csv"))
download.file("http://www.kateto.net/wordpress/wp-content/uploads/2017/06/polnet2017.zip",tmp)
######################
require(readr)
tmp <- tempfile()
download.file("http://www.kateto.net/wordpress/wp-content/uploads/2017/06/polnet2017.zip",tmp)
df <- read_csv(unz(tmp,
"Data files/Dataset1-Media-Example-EDGES.csv"))
View(df)
links <- read_csv(unz(tmp,
"Data files/Dataset1-Media-Example-EDGES.csv"))
library(igraph)
net_ex <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
net_ex
nodes <- read_csv(unz(tmp,
"Data files/Dataset1-Media-Example-NODES.csv"))
library(igraph)
net_ex <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
net_ex
View(nodes)
data.nodes <- data %>%
group_by(nodes) %>%
summarize(n=())
data.nodes <- data %>%
group_by(nodes) %>%
summarize(n=())
data.nodes <- data %>%
group_by(nodes) %>%
summarise(n=())
data.nodes <- data %>%
group_by(nodes)
library(dplyr)
data.nodes <- data %>%
group_by(nodes) %>%
summarise(n=())
data.nodes <- data %>%
group_by(ID = nodes) %>%
summarise(nodes = n())
View(data.nodes)
data.nodes <- data %>%
group_by(ID = nodes) %>%
summarise(nodes = n()) %>%
sort(ID)
data.nodes <- data %>%
group_by(ID = nodes) %>%
summarise(nodes = n())
data.nodes <- sort(data.nodes$ID)
head(data.nodes, 25)
data.nodes <- data %>%
group_by(ID = nodes) %>%
summarise(nodes = n())
View(data.nodes)
plot(net_ex)
library(igraph)
net_t1 <- graph_from_data_frame(d=data, vertices=data.nodes, directed=T)
plot(net_t1)
unique(data$nodes)
View(data)
length(unique(data$nodes))
net_t1 <- graph_from_data_frame(d=data, vertices=data.nodes, directed=T)
length(unique(data$edges))
data.edges <- data %>%
group_by(ID = edges) %>%
summarise(edges = n())
net_t1 <- graph_from_data_frame(d=data, vertices=data.edges, directed=T)
plot(net_t1)
length(!(unique(data$nodes) %in% unique(data$edges))
)
length(rbind(unique(data$nodes),unique(data$edges)))
unique(rbind(unique(data$nodes),unique(data$edges)))
length(unique(rbind(unique(data$nodes),unique(data$edges))))
length(rbind(unique(data$nodes),unique(data$edges)))
View(data)
tmp <- tempfile()
download.file("http://snap.stanford.edu/data/p2p-Gnutella08.txt.gz",tmp)
data <- read.csv(
gzfile(tmp),
sep="\t",
header=FALSE)
data <- data[-(1:4),]
names(data) <- c("nodes", "edges")
rm(tmp)
str(data)
length(rbind(data$nodes,data$edges))
length(unique(rbind(data$nodes,data$edges)))
tmp <- tempfile()
download.file("http://snap.stanford.edu/data/p2p-Gnutella08.txt.gz",tmp)
data <- read.csv(
gzfile(tmp),
sep="\t",
header=FALSE)
data <- data[-(1:4),]
names(data) <- c("nodes", "edges")
data$nodes <- as.numeric(data$nodes)
data$edges <- as.numeric(data$edges)
rm(tmp)
str(data)
library(dplyr)
data.nodes <- data %>%
group_by(ID = nodes) %>%
summarise(nodes = n())
library(igraph)
net_t1 <- graph_from_data_frame(d=data, vertices=data.edges, directed=T)
plot(net_t1)
length(!(unique(data$nodes) %in% unique(data$edges)))
unique(data$nodes)
data.nodes <- data %>%
group_by(ID = nodes) %>%
summarise(nodes = n())
data.edges <- data %>%
group_by(ID = edges) %>%
summarise(edges = n())
View(data.edges)
View(data.nodes)
length(data.node[data.nodes$ID %in% data.edges$ID,])
length(data.nodes[data.nodes$ID %in% data.edges$ID,])
length(data.nodes[data.edges$ID %in% data.nodes$ID,])
length(data.edges[data.edges$ID %in% data.nodes$ID,])
?full_join
data_nodes <- full_join(data.nodes, data.edges, by = "ID")
View(data_nodes)
View(data.nodes)
View(data.edges)
data.edges,
data_nodes <- full_join(data.edges,data.nodes,  by = "ID")
length(unique(rbind(data$nodes,data$edges)))
length(unique(rbind(data$nodes,data$edges)$ID))
temp <- rbind(data$nodes,data$edges)
length(unique(temp$ID))
temp <- as.data.frame(rbind(data$nodes,data$edges))
temp <- as.data.frame(cbind(data$nodes,data$edges))
View(temp)
temp <- as.data.frame(c(data$nodes,data$edges))
length(unique(temp$ID))
length(unique(temp))
temp <- c(data$nodes,data$edges)
length(unique(temp))
data_nodes <- full_join(data.edges,data.nodes,  by = "ID")
rm(data.nodes, data.edges)
rm(df,links,net,net_ex,nodes,test,temp)
net_t1 <- graph_from_data_frame(d=data, vertices=data_nodes, directed=T)
plot(net_t1)
######
library(ggnet)
library(network)
library(sna)
library(ggplot2)
library(RColorBrewer)
kohda.net <- as.network.matrix(kohda, directed=T) #make network object
kohda.net %v% "depth" = c(rep("shallow",2), "mid", rep("shallow",5), rep("mid",2), "shallow", "mid", rep("deep",2), rep("mid",4), "shallow", rep("deep",2), "mid", rep("deep",2), "shallow", rep("mid",5), "shallow")
test <- network(data)
test <- simplify(test, remove.multiple = F, remove.loops = T)
plot(test, edge.arrow.size=.4,vertex.label=NA)
library(igraph)
net_t1 <- graph_from_data_frame(d=data, vertices=data_nodes, directed=T)
net_t1 <- simplify(net_t1, remove.multiple = F, remove.loops = T)
plot(test, edge.arrow.size=.4,vertex.label=NA)
warnings()
plot(net_t1, edge.arrow.size=.4,vertex.label=NA)
rm(test)
plot(net_t1, edge.arrow.size=.4,vertex.label=NA, vertex.size=5)
plot(net_t1,
edge.arrow.size=.4,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=5)
plot(net_t1,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=5)
plot(net_t1,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA)
plot(net_t1,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=8)
data_nodes$hosts <- if_else(data_nodes$nodes<10, "small",
if_else(data_nodes$nodes>50, "big", "medium"))
summary(data_nodes$hosts)
data_nodes$hosts <- if_else(data_nodes$edges<10, "small",
if_else(data_nodes$edges>50, "big", "medium"))
summary(data_nodes$hosts)
library(igraph)
net_t1 <- graph_from_data_frame(d=data, vertices=data_nodes, directed=T)
net_t1 <- simplify(net_t1, remove.multiple = F, remove.loops = T)
V(net_t1)$hosts
E(net_t1)$hosts
colrs <- c("gray10", "gray50", "gray99")
V(net_t1)$color <- colrs[V(net_t1)$hosts]
plot(net_t1,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=8)
tmp <- tempfile()
download.file("http://snap.stanford.edu/data/amazon0302.txt.gz",tmp)
df <- read.csv(
gzfile(tmp),
sep="\t",
header=FALSE)
View(df)
View(df)
tmp <- tempfile()
download.file("http://snap.stanford.edu/data/amazon0302.txt.gz",tmp)
df <- read.csv(
gzfile(tmp),
sep="\t",
header=FALSE)
df <- df[-(1:4),]
names(df) <- c("from", "to")
df$nodes <- as.numeric(df$from)
df$edges <- as.numeric(df$to)
rm(tmp)
tmp <- tempfile()
download.file("http://snap.stanford.edu/data/amazon0302.txt.gz",tmp)
df <- read.csv(
gzfile(tmp),
sep="\t",
header=FALSE)
df <- df[-(1:4),]
names(df) <- c("from", "to")
df$from <- as.numeric(df$from)
df$to <- as.numeric(df$to)
rm(tmp)
df_test <- sample(df, 200)
df_test <- df[sample(df, 200),]
df_test <- df[sample(df$from, 200),]
df_test_net <- network(df_test)
ggnet2(df_test_net)
df.nodes <- df %>%
group_by(ID = from) %>%
summarise(from = n())
df_test.nodes <- df_test %>%
group_by(ID = from) %>%
summarise(from = n())
df_test_net <- graph_from_data_frame(d=df_test, vertices=df_test.nodes, directed=T)
df_test.nodes <- df_test %>%
group_by(ID = c(from, to)) %>%
summarise(unique())
df_test.nodes <- unique(c(df_test$from,df_test$to))
library(igraph)
df_test_net <- graph_from_data_frame(d=df_test, vertices=df_test.nodes, directed=T)
df_test_net <- simplify(df_test_net, remove.multiple = F, remove.loops = T)
plot(df_test_net)
plot(df_test_net,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=8)
df.nodes <- df %>%
group_by(ID = from) %>%
summarise(from = n())
summary(df$to %in% df.nodes$ID)
nrow(df[df$to %in% df.nodes$ID == FALSE, ])
df.nodes$hosts <- if_else(df.nodes$nr_edges<10, "small",
if_else(df.nodes$nr_edges>50, "big", "medium"))
df.nodes <- df %>%
group_by(ID = from) %>%
summarise(nr_edges = n()) #Include all relevant nodes and the number of their received edges
df.nodes$hosts <- if_else(df.nodes$nr_edges<10, "small",
if_else(df.nodes$nr_edges>50, "big", "medium"))
df <- df[df$to %in% df.nodes$ID != FALSE, ] #Exclude all non-hosts (nodes) - 25,537 observations
df_test <- df[sample(df$from, 200),]
df_test.nodes <- unique(c(df_test$from,df_test$to))
library(igraph)
df_test_net <- graph_from_data_frame(d=df_test, vertices=df_test.nodes, directed=T)
df_test_net <- simplify(df_test_net, remove.multiple = F, remove.loops = T)
plot(df_test_net,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=8)
df_test <- df[sample(df$from, 2000),]
df_test.nodes <- unique(c(df_test$from,df_test$to))
library(igraph)
df_test_net <- graph_from_data_frame(d=df_test, vertices=df_test.nodes, directed=T)
df_test_net <- simplify(df_test_net, remove.multiple = F, remove.loops = T)
plot(df_test_net,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=8,
layout=layout_with_fr)
df_test <- df[sample(df$from, 5000),]
df_test.nodes <- unique(c(df_test$from,df_test$to))
library(igraph)
df_test_net <- graph_from_data_frame(d=df_test, vertices=df_test.nodes, directed=T)
df_test_net <- simplify(df_test_net, remove.multiple = F, remove.loops = T)
plot(df_test_net,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=8,
layout=layout_with_fr)
plot(df_test_net,
edge.arrow.size=.1,
edge.width=.4,
edge.arrow.width=.4,
vertex.label=NA,
vertex.size=8,
layout=layout_on_sphere)
rm(ls=list())
rm(list=ls())
cat(\f)
cat(/f)
cat("\f")
# root URL
r = "https://raw.githubusercontent.com/briatte/ggnet/master/"
# read nodes
v = read.csv(paste0(r, "inst/extdata/nodes.tsv"), sep = "\t")
names(v)
# read edges
e = read.csv(paste0(r, "inst/extdata/network.tsv"), sep = "\t")
names(e)
# network object
net = network(e, directed = TRUE)
# party affiliation
x = data.frame(Twitter = network.vertex.names(net))
x = merge(x, v, by = "Twitter", sort = FALSE)$Groupe
net %v% "party" = as.character(x)
# color palette
y = RColorBrewer::brewer.pal(9, "Set1")[ c(3, 1, 9, 6, 8, 5, 2) ]
names(y) = levels(x)
# network plot
ggnet2(net, color = "party", palette = y, alpha = 0.75, size = 4, edge.alpha = 0.5)
# network plot
?jpg
# network plot
png(filename = "test_ggnet2.png", width = 450, height = 450)
ggnet2(net, color = "party", palette = y, alpha = 0.75, size = 4, edge.alpha = 0.5)
dev.off()
png(filename = "test_ggnet2.png", width = 450, height = 450)
ggnet2(net, color = "party", palette = y, alpha = 0.75, size = 4, edge.alpha = 0.5)
dev.off()
